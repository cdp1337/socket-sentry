INSTALLING SOCKET SENTRY FROM SOURCES
=====================================

IMPORTANT: If you are upgrading to a new build of Socket Sentry, you should
========== uninstall the old one first. Follow the uninstallation instructions
           at the end of this document before continuing.

Socket Sentry is made up of three parts.

socketsentry-service: 
    A D-Bus service that runs as root to collect network and process data.
socketsentry-plasma-engine: 
    Plasma data engine that is really just a thin wrapper around the service.
socketsentry-plasma-widget: 
    The actual UI widget.

To build all three parts, make sure you have the prerequisites.

- Linux kernel >= 2.6
- CMake >= 2.6
- GCC and make
- Qt >= 4.5 development files and headers
- KDE >= 4.3 development files and headers
- libpcap >= 0.8 with headers
- (optional) Google Mock and Google Test >= 1.4

Kubuntu 9.10 or later users can run this to get the required packages:
  sudo apt-get install build-essential cmake libqt4-dev libpcap-dev kde-devel

openSUSE 11.2 or later users can run this to get the required packages:
  zypper install cmake libqt4-devel libpcap-devel libkde4-devel

Sadly, neither distribution packages GMock/GTest. You can download and install
them manually or skip them if you don't care about running the unit tests.
The build process degrades gracefully if they're not found.

Once you have the required libraries, you can build and install with:
  cd <socketsentry_dir>
  ./install.sh

The script will escalate your privileges to root (using "sudo") to complete the
installation. If that makes you nervous, you can do each step manually. Just
take a look at what "install.sh" does and do the same thing at the console.    

IMPORTANT: The last step of the installation is to restart your Plasma desktop
session. You will very likely get an error if you try to use the widget before
doing this. To restart Plasma, you can log out and then log back in. Or at the
console, type:
  kquitapp plasma-desktop
  plasma-desktop 

INSTALLING SOCKET SENTRY FROM PACKAGES
======================================

Binary installation packages for certain Linux distributions are available 
via the openSUSE Build Service (build.opensuse.org). These can be installed
through your distro's native package manager. You can also add our
repositories to be notified about future upgrades. Visit 
http://code.google.com/p/socket-sentry for details.

IMPORTANT: After installing or upgrading packages, you must restart your
Plasma desktop session. You will very likely get an error if you try to use
the widget before doing this. To restart Plasma, you can log out and then log
back in. Or at the console, type:
  kquitapp plasma-desktop
  plasma-desktop 

Note that these packages are not "official" packages maintained by the distro
develoeprs. If your distro provides its own packages, you should use those
instead unless you want the absolute latest code.

You can also build the distro packages yourself if you have an account at the
openSUSE Build Service (OBS). To do this, first run the "./obs-staging.sh"
script from the top-level project directory. This will prepare a tarball of
the source code and also generate the meta-package files, all of which are
placed in a subdirectory called "staging". Simply upload the contents of
this directory to OBS or use the command line "osc" tool to build packages
locally. Instructions for OBS are available at http://build.opensuse.org. 


TESTING THE INSTALLATION
========================

To test the D-Bus service, run the following command (as non-root):
  socksent-client
  
This should print a list of supported network devices. You can call it again
passing in a device name if you want to try it out. Press CTRL-C to end.

If instead you get a cryptic error that says something like "Launch helper
exited with unknown return code", it usually means you're not logged into the
local console or D-Bus can't tell that you are. In either case, you need to
give yourself explcit permission to access the D-Bus service. To do this,
create a group called "socketsentry" and add your user account to it.

Once you've verified that the D-bus service works and you've restarted Plasma
as described in the installation instructions, you should be able to add the 
Socket Sentry Plasma widget to your desktop. 

UNINSTALLING SOCKET SENTRY
==========================

To remove Socket Sentry or before upgrading, follow these steps:

1) Remove all Socket Sentry widgets from desktops and panels.

2) a) If you installed directly from sources, run these commands as root:
        pkill -f socksent-service
        cd <socketsentry_dir>/build
        make uninstall
   b) If you installed from a package, remove it via your package manager.
   
3) (optional) You may remove the [socksent-plasma-widget] global section from
   the "~/.kde/share/config/plasma-desktop-appletsrc" file if you wish. 
